version: "3.8"

services:
  app:
    build:
      context: ./apps/laravel
      dockerfile: Dockerfile
    container_name: laravel_app_prod
    working_dir: /var/www
    volumes:
      - ./apps/laravel:/var/www
    environment:
      - APP_ENV=production
    depends_on:
      - mysql
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - laravel

  nginx:
    image: nginx:alpine
    container_name: laravel_nginx_prod
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./apps/laravel:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/certs:/etc/nginx/certs
      - ./docker/nginx/.htpasswd:/etc/nginx/.htpasswd
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - laravel

  mysql:
    image: mysql:8
    container_name: laravel_mysql_prod
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - mysql_data_prod:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: laravel_redis_prod
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - laravel

  horizon:
    build:
      context: ./apps/laravel
      dockerfile: Dockerfile
    container_name: laravel_horizon
    volumes:
      - ./apps/laravel:/var/www
    command: php artisan horizon
    depends_on:
      - redis
    networks:
      - laravel

volumes:
  mysql_data_prod:

networks:
  laravel:
